로그인, 메인
1. 회원가입
String join = "INSERT INTO USERINFO(ACCOUNT_ID, PASSWORD, USER_NAME, EMAIL, PHONENUMBER)" + "VALUES (?, ?, ?, ?, ?)";
2. 로그인
String login = "SELECT ACCOUNT_ID FROM USERINFO WHERE ACCOUNT_ID = ? AND PASSWORD = ?";
(아이디 비밀번호 찾기기능 B순위 구현)
3. 회원정보변경
3-1. 이메일 변경
String updateEmail = "UPDATE USERINFO SET EMAIL = ? WHERE PASSWORD = ?";
3-2. 연락처 변경
String updatePhonenumber = "UPDATE USERINFO SET PHONENUMBER = ? WHERE PASSWORD = ?";
3-3. 비밀번호 변경
String updatePassword = "UPDATE USERINFO SET PASSWORD = ? WHERE PASSWORD = ?";
4.탈퇴
String deleteAccount = "DELETE FROM USERINFO WHRE ACCOUNT_ID = ? AND PASSWORD = ?";
(계정삭제시 DB에 데이터 남기지않고 전부 삭제)
5.메인페이지 검색창
String search = "SELECT * FROM PRODUCTS WHERE PRODUCT_TITLE LIKE '%?%'";
============================================================
리뷰게시판
--테이블 생성
CREATE TABLE BOARD_REVIEW(
    REVIEW_NO NUMBER PRIMARY KEY
   ,REVIEW_FILE BLOB
   ,REVIEW_TITLE VARCHAR2(60) NOT NULL
   ,REVIEW_TEXT VARCHAR2(3000) NOT NULL
   ,REVIEW_TIME DATE NOT NULL
   ,ACCOUNT_ID VARCHAR2(60) NOT NULL
);

--게시글 생성
INSERT INTO BOARD_REVIEW(REVIEW_NO,REVIEW_FILE,REVIEW_TITLE,REVIEW_TEXT,REVIEW_TIME,ACCOUNT_ID) VALUES (?,?,?,?,?,?);			

--게시글 조회
SELECT * FROM BOARD_REVIEW WHERE ACCOUNT_ID = ? AND REVIEW_NO = ?;

--게시글 수정
UPDATE BOARD_REVIEW SET REVIEW_TITLE = ?, REVIEW_TEXT =? WHERE REVIEW_NO = ?;

--게시글 삭제
DELETE FROM BOARD_REVIEW WHERE ACCOUNT_ID = ? AND REVIEW_NO = ?;

--게시글 검색
SELECT * FROM BOARD_REVIEW WHERE REVIEW_TITLE='%?%';
SELECT * FROM BOARD_REVIEW WHERE ACCOUNT_ID=?;
SELECT * FROM BOARD_REVIEW WHERE REVIEW_TEXT='%?%';
============================================================
마이페이지
CREATE TABLE PRODUCTS(
    PRODUCT_NO NUMBER PRIMARY KEY NOT NULL,
    PRODUCT_TITLE VARCHAR2(60) NOT NULL,
    PRODUCT_TEXT VARCHAR2(3000) NOT NULL,
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_CATEGORY VARCHAR2(30) NOT NULL,
    PRODUCT_COMMENT VARCHAR2(255),
    PRODUCT_FILE BLOB,
    ACCOUNT_ID VARCHAR2(60) NOT NULL
);

CREATE SEQUENCE SEQ_PNO
START WITH 1
INCREMENT BY 1
NOMAXVALUE
MINVALUE 1
NOCYCLE;

-- 상품 등록
INSERT INTO PRODUCTS
VALUES(SEQ_PNO.NEXTVAL, ?, ?, ?, ?, ?, ?, ?);

-- 상품 업데이트
UPDATE PRODUCTS SET PRODUCT_TITLE = ? WHERE PRODUCT_NO = ?;
UPDATE PRODUCTS SET PRODUCT_TEXT = ? WHERE PRODUCT_NO = ?;
UPDATE PRODUCTS SET PRODUCT_PRICE = ? WHERE PRODUCT_NO = ?;
UPDATE PRODUCTS SET PRODUCT_CATEGORY = ? WHERE PRODUCT_NO = ?;
UPDATE PRODUCTS SET PRODUCT_FILE = ? WHERE PRODUCT_NO = ?;

-- 상품 삭제
DELETE FROM PRODUCTS
WHERE ACCOUNT_ID = ? AND PRODUCT_NO = ?;

-- 전체 상품 조회
SELECT *
FROM PRODUCTS
WHERE ACCOUNT_ID = ?;

-- 상품 검색
SELECT *
FROM PRODUCTS
WHERE PRODUCT_TITLE = '%?%';
============================================================
자유게시판
"INSERT INTO BOARD (BOARD_FILE,BOARD_TITLE,BOARD_TEXT,BOARD_TIME,ACCOUNT_ID)
VALUES(?,?,?,?,?);"	
UPDATE BOARD SET BOARD_TEXT = ? WHERE BOARD_TEXT = ?	
DELETE BOARD SET BOARD_NO WHERE BOARD_NO = ?	
SELECT * FROM BOARD WHERE ACCOUNT_ID = ?;
============================================================
큐엔에이게시판
--QnA입력
INSERT INTO BOARD_QNA(QNA_NO, ACCOUNT_ID, QNA_TITLE, QNA_TEXT,QNA_TIME) VALUES ( ?, ?, ?, ?, ?);							
String insertQnA = ""INSERT INTO BOARD_QNA( QNA_NO, ACCOUNT_ID, QNA_TITLE, QNA_TEXT, QNA_TIME)"" + ""VALUES(?, ?, ?, ?, ?)"";    
insertBOARD_QNA(preparedStatement 변수명, 1, ""id"", ""질문제목"", ""질문본문"", TIMESTAMP);"	
--QnA검색
SELECT * FROM BOARD_QNA WHERE ACCOUNT_ID = ?;
SELECT * FROM BOARD_QNA WHERE QNA_TITLE = %?%;
SELECT * FROM BOARD_QNA WHERE QNA_TEXT = %?%;
--QnA수정
UPDATE BOARD_QNA SET QNA_TITLE = ? WHERE QNA_NUMBER = ?;
UPDATE BOARD_QNA SET QNA_TEXT = ? WHERE QNA_NUMBER = ?;
String updateQtitle = "UPDATE BOARD_QNA SET QNA_TITLE = ? WHERE QNA_NUMBER = ?";
String updateQtext = "UPDATE BOARD_QNA SET QNA_TEXT = ? WHERE QNA_NUMBER = ?";
--QnA삭제
DELETE FROM BOARD_QNA WHERE ACCOUNT_ID = ?;
String deleteQnA = "DELETE FROM BOARD_QNA WHERE account_id = ?";
CREATE TABLE BOARD_QNA(
QNA_NO NUMBER PRIMARY KEY NOT NULL,
ACCOUNT_ID VARCHAR2(60) NOT NULL,
QNA_TITLE VARCHAR2(60) NOT NULL,
QNA_TEXT VARCHAR2(3000) NOT NULL, 
QNA_TIME DATE NOT NULL);